import React from "react";
import {render,screen,fireEvent, getByLabelText, getByRole} from "@testing-library/react";
import Login from "./Login";

test("Checking Username", () => {
  render(<Login />);
  const element = screen.getByText("Username");
  expect(element).toBeInTheDocument();
});
test("Checking Password", () => {
  render(<Login />);
  const element = screen.getByText("Password");
  expect(element).toBeInTheDocument();
});
test("Checking 'Create account?'", () => {
  render(<Login />);
  const buttonelement = screen.getByText("Create an Account?");
  expect(buttonelement).toBeInTheDocument();
});

test("Checking Login button", () => {
  render(<Login />);
  const ubutton = screen.getByRole("button", { name: "Login", exact: false });
  expect(ubutton).toBeInTheDocument();
});
test("Checking placeholder details", () => {
  render(<Login />);
  const userinput = screen.getByPlaceholderText("Enter username", {exact: false});
  expect(userinput).toBeInTheDocument();
});
test("Checking placeholder Password", () => {
  render(<Login />);
  const passinput = screen.getByPlaceholderText("Enter the password", { exact: false,});
  expect(passinput).toBeInTheDocument();
});

describe("Login ", () => {
  test("validates email and password inputs", () => {
    const { getByText } = render(<Login />);

    const emailInput = screen.getByPlaceholderText(/Enter username/i);
    const passwordInput = screen.getByPlaceholderText(/Enter the password/i);
    const submitButton = screen.getByRole("button", {
      name: "Login",
      exact: false,
    });

    // Test case 1: Invalid email domain
    fireEvent.change(emailInput, { target: { value: "test@invalid.com" } });
    fireEvent.change(passwordInput, { target: { value: "123456" } });
    fireEvent.click(submitButton);
    expect(getByText(/Invalid email address/i)).toBeInTheDocument();

    // Test case 2: Invalid password length
    fireEvent.change(emailInput, { target: { value: "test@bmc.com" } });
    fireEvent.change(passwordInput, { target: { value: "123" } });
    fireEvent.click(submitButton);
    expect(
      getByText(/Password must be at least 6 characters/i),
    ).toBeInTheDocument();

    // Test case 3: Valid email and password
    fireEvent.change(emailInput, { target: { value: "test@bmc.com" } });
    fireEvent.change(passwordInput, { target: { value: "123456" } });
    fireEvent.click(submitButton);

  });
});







signup




import React from "react";
import { render, screen, fireEvent, getByTestId } from "@testing-library/react";
import Signup from "./Signup";

describe("Signup ", () => {
  test("Validates email and password inputs", () => {
    const { getByText } = render(<Signup />);

    const emailInput = screen.getByPlaceholderText(/Enter username/i);
    const passwordInput = screen.getByPlaceholderText(/Enter the password/i);
    const cpasswordInput = screen.getByPlaceholderText(/Confirm password/i);
    const submitButton = screen.getByRole("button", {name: "Signup" ,exact: false });

    // Test case 1: Invalid email domain
    fireEvent.change(emailInput, { target: { value: "test@invalid.com" } });
    fireEvent.change(passwordInput, { target: { value: "123456" } });
    fireEvent.change(cpasswordInput, { target: { value: "123456" } });
    fireEvent.click(submitButton);
    expect(getByText(/Invalid email address/i)).toBeInTheDocument();

    // Test case 2: Invalid password length
    fireEvent.change(emailInput, { target: { value: "test@bmc.com" } });
    fireEvent.change(passwordInput, { target: { value: "123" } });
    fireEvent.change(cpasswordInput, { target: { value: "123" } });
    fireEvent.click(submitButton);
    expect(getByText(/Password must be at least 6 characters/i)).toBeInTheDocument();

    // Test case 3: Passwords not match
    fireEvent.change(emailInput, { target: { value: "test@bmc.com" } });
    fireEvent.change(passwordInput, { target: { value: "1234567" } });
    fireEvent.change(cpasswordInput, { target: { value: "123456" } });
    fireEvent.click(submitButton);
    expect(getByText(/Passwords do not match/i)).toBeInTheDocument();

    // Test case 4: Valid email and password
    fireEvent.change(emailInput, { target: { value: "test@bmc.com" } });
    fireEvent.change(passwordInput, { target: { value: "123456" } });
    fireEvent.change(cpasswordInput, { target: { value: "123456" } });
    fireEvent.click(submitButton);

    //  const successPopup = getByText('Form submitted successfully!');
    //  expect(successPopup).toBeVisible();
  });
});
